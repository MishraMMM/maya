#ANN Assignment 12

import pandas as pd 
import numpy as np
import matplotlib.pyplot as plt
import tensorflow as tf 

#import data 
from tensorflow.keras.datasets import fashion_mnist

(X_train,y_train), (X_test, y_test) = fashion_mnist.load_data()

X_train.shape, y_train.shape, X_test.shape, y_test.shape

#check image
X_train[0]

#view image
plt.imshow(X_train[0])

X_train = X_train.reshape(60000,28,28,1)

X_test = X_test.reshape(10000,28,28,1)

X_train.max(), X_train.min()

#scaling
X_train = X_train/255

X_test = X_test/255

X_train.max(), X_train.min()

#label
y_train

np.unique(y_train)

y_train_cat = tf.keras.utils.to_categorical(y_train)

y_train[0]

y_train_cat[0]

# CNN Model
from tensorflow.keras.models import Sequential
from tensorflow.keras.layers import Dense,Conv2D, MaxPool2D, Flatten

model = Sequential()

#CNN
model.add(Conv2D(filters=64, kernel_size=(3,3), input_shape=(28,28,1), activation='relu'))
model.add(MaxPool2D(pool_size=(2,2)))
model.add(Flatten())


#ANN
model.add(Dense(128, activation='relu'))
model.add(Dense(10, activation='softmax'))


model.compile(loss='categorical_crossentropy',
              optimizer='adam',
              metrics=['accuracy']) 

model.summary()

from tensorflow.keras.callbacks import EarlyStopping

early_stop = EarlyStopping(monitor='val_loss', patience=2)

model.fit(X_train, y_train_cat, epochs=2, verbose=1)

y_pred = model.predict(X_test)

y_pred_cat = np.argmax(y_pred, axis=1)

from sklearn.metrics import classification_report

print(classification_report(y_test, y_pred_cat))

#check visually
plt.imshow(X_test[186])

# 0 T-shirt/top
# 1 Trouser
# 2 Pullover
# 3 Dress
# 4 Coat
# 5 Sandal
# 6 Shirt
# 7 Sneaker
# 8 Bag
# 9 Ankle boot

y_pred_cat[186]

